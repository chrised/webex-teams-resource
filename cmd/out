#!/bin/sh
set -e

. $(dirname ${0})/common.sh

repipe
load_source
# cat/sec-shenanigans conducted here to retain line breaks for things like code
# blocks
eval $(cat /tmp/stdin | sed 's/\\n/\\\\n/g' | jq -r '{
    "params_message": (.params.message // ""),
    "params_markdown": ( .params.markdown // ""),
} | to_entries[] | .key + "=" + @sh "\(.value)"' -)


if [ -z "${params_message}" ] && [ -z "${params_markdown}" ]; then
    echo '`message` and/or `markdown` must be provided as a parameter.'
    exit 1
else
    params_markdown="$(echo ${params_markdown} | sed 's/\\n/\n/g')"
    params_message="$(echo ${params_message} | sed 's/\\n/\n/g')"
    jq -c -n \
      --arg roomId "${room_id}" \
      --arg markdown "${params_markdown}" \
      --arg text "${params_message}" \
      '{
          "roomId": $roomId,
          "markdown": $markdown,
          "text": $text,
      } | to_entries | map( select( 0 < ( .value | length ) ) ) | from_entries' \
      | curl_webex \
        -d@- \
        "${base_url}/messages"
fi


jq -c \
  '{
      "version": {
          "message": .id
      },
      "metadata": [
        {
          "name": "created_at",
          "value": .created,
        },
        {
          "name": "created_by",
          "value": .personEmail,
        }
      ]
  }' \
  < /tmp/curl_webex_output \
  >&3
